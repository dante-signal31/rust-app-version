name: test_and_merge

on:
    push:
      branches: [ staging ]
    pull_request:
      branches: [ staging ]

    workflow_dispatch:

jobs:
    unit-tests:
      runs-on: ubuntu-latest
      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Install pytest.
          run: |
            python -m pip install --upgrade pip
            python -m pip install pytest pytest-xdist

        - name: Install testing dependencies.
          run: |
            python -m pip install -r requirements.txt

        - name: Run unit-tests.
          run: |
            python -m pytest

    integration-tests:
      runs-on: ubuntu-latest
      needs: unit-tests
      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Get current rust app version from its Cargo.toml.
          id: foo
          uses: dante-signal31/rust-app-version@staging
          with:
            cargo_toml_folder: rust_app_version/tests/resources/

        - name: Check we got expected version.
          shell: bash
          run: |
            [ "${{ steps.foo.outputs.app_version.value }}" = "0.9.2+post7" ] && echo "Correct version retrieved" || { echo Incorrect version retrieved: ${{ steps.foo.outputs.app_version }}; exit 1; }

    merge-master:
      runs-on: ubuntu-latest
      needs: integration-tests
      steps:
        - name: Get source code from repository.
          uses: actions/checkout@v2

        - name: Merge staging with master.
          uses: devmasx/merge-branch@master
          with:
            type: now
            from_branch: staging
            target_branch: main
            github_token: ${{ secrets.GITHUB_TOKEN }}